import * as React from "react";
import { TwitterStickyConsumer } from "./TwitterStickyContent";

export class TwitterStickyHeader extends React.Component {
  render() {
    return (
      <TwitterStickyConsumer>
        {(value) => {
          return <Content {...value} children={this.props.children} />;
        }}
      </TwitterStickyConsumer>
    );
  }
}

interface ContentProps {
  top: number;
  minTop: number;
  duration: number;
}

class Content extends React.Component<ContentProps> {
  private _latestTop = 0;
  private _updatedAt = Date.now();

  state = {
    visible: true,
  }

  componentWillReceiveProps({ top, minTop }: ContentProps) {
    const { visible } = this.state;
    const now = Date.now();
    const updatable = now > this._updatedAt + 400;
    const shouldHide = this._latestTop > top + 10 && -top > minTop && visible === true;
    const shouldVisible = top - 1 > this._latestTop && visible === false;
    if (updatable && (shouldHide || shouldVisible)) {
      this._updatedAt = Date.now();
      this.setState({ visible: !visible });
    }
    this._latestTop = top;
  }

  render() {
    const { top, duration } = this.props;
    const { visible } = this.state;
    return (
      <div style={{
        position: 'fixed',
        top: `${-top}px`,
        left: '0',
        right: '0',
        height: '100%',
        transform: `translate3d(0, ${visible ? 0 : '-100%'}, 0)`,
        transition: visible ? '' : `transform ${duration}ms ease-in`
      }}>
        {this.props.children}
      </div>
    );
  }
}
